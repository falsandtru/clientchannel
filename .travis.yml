language: node_js
matrix:
  include:
  - os: linux
    dist: trusty
    sudo: required
    node_js: 8
  - os: osx
    osx_image: xcode8
    node_js: 8
env:
  global:
  - secure: "BUhWDX9NzvFpLeqKylSezLZLNYse6od39DF1vUwl7PbbxZMMH2uolC1aFLt5rW5OjEazerKJF7sq3cpyrhis4jdBsNHwLSWMbTqKlUgDPCdrTPhx8SCMoWZq2IrlB0OAqQ8bsF2pWuMVcRO9cXOY49L9SHvtk3+sm8PXkQf0bh896BplJcl6uZjoLyL969HuF1kHvad7ozYbOvkJgcKBTqBj7hNoxjoAGnQzF4eWkJzizyKzLV16UQqyu0K4MwF9VOIJiZEO3ZLwJexidhU+AvKiS9xS06avIC3rKeviT8XjL/CRUoa5dx/6HWYdv3m2t0lPDGPXybh2ZMkuycb09N8T7P0At8ZVeUS19SgT9brx7QPGIswsNLVq0r/XM3Q0APV/X0L6nYkaTztnw31Oko6VwXGdr6KxjNywACnZLf+ST8cpe8MIhzU3FXgIWOFzuqGX/cToU3IUo9dBpHiEP0VGaI4innG2sZzU6zaUftRiPgm2cMu6fEevpb7fxyEu5jk/9qRKx5WvTY09EaikbPre2nafJPl/YHauoSf6+sxirUQQGt/ryX7IxmNke9tBw9hO8xtkUQFzy67h+FKEDBoCeBEdikCrZOPQGXZoYTO00WTvp1hza+v7fWfOXLlkuKqqaAomGd5HnXPnVW/ZJRlI+SbBJuSGx01d3uoO75g="
  - GIT_OWNER=$(echo $TRAVIS_REPO_SLUG | cut -d/ -f1)
  - GIT_REPO=$(echo $TRAVIS_REPO_SLUG | cut -d/ -f2)
  - GIT_COMMITTER_NAME=$(git log -1 --pretty=format:%an)
  - GIT_COMMITTER_EMAIL=$(git log -1 --pretty=format:%ae)
  - GIT_COMMIT_ID=$(git rev-parse HEAD)
addons:
  firefox: latest
  apt:
    sources:
    - google-chrome
    packages:
    - google-chrome-stable
before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CHROME_BIN=chromium-browser; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export DISPLAY=:99.0; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sh -e /etc/init.d/xvfb start; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install google-chrome; fi
script:
- travis_retry npm run ci
before_deploy:
- sed -i 's/"private":\ true/"private":\ false/' package.json
- sed -i -E 's/^dist\/?.*$//' .gitignore
deploy:
  provider: npm
  email:
    secure: "vFku2HASiG87+c4zdfjnMgNzDm6olPOUG5fgN3NcfRP2/vZLuT2l1M3OaZ94DGaTTEJ7slFfoBRCoYJ3o0N2AEHTFo52XtTE8cN2T9rdbUZ9O7fskRFipiM6xGF6WZHFBdslBCrPGor60IRKeUh5yxa8L9+iJlCBiKVb9rGpPEAWaW0/tYh99pu1S+oMuyaiYw6/HvpXR6VmzYcnj7ky4J8XRcyENuFY5tPbCZ09CAlDmRjivTvfT9BgGMXViOgNtDXPP2+g1cbGnSsAf6Yo2Zy8/Ax38hnqW8fft7bI3/fCEbUQeNW2tc6jxjRigJ6AXssmoRAD9LmLw5cwsLx05EN2Blm+rSiZ84hR8O4pj55Nw0itAQLrFTAQ6oVPdIcEy2xtO2OHxcW0WMvVL6FhR38Ik2vOZY/wKTHyCxHF1YQXFLSfS0+QqxYC4KlcybWtSHjwjBdJto4y2jenNno+Ge1TJI1mHHRIuFig4oVzxnVl48CNoR6u8y/cNnZKovbHLefMBNi8usJQj6620CUd8uTk1Q4EfIM7xaq4Gitt0YhzRK63JqjwG/gDu5421FdyATqd3GMb9DHK1YqHgA2PJLf5ODSSFAGCBZTulWJpcnqaKijpjWCBb8PEeS7rBYBDvEHWMwaENpJxPODvztsQXyOFfiPhRp9r8BL2graGQoo="
  api_key:
    secure: "E/9YedRk/kt8OlvsRHIv84fzJRtxMBlj9xq/goXqTVtZB9nWDEF1WXwoAytwps0f1js8GnJrdGsCbwtv2XNV/xqpoRoGBhzgG5KET9wqWX3BfDAM5Rh1z8w1PRM18JvqAGQGlRkrnxD/2Zsx5iMao1ozZ0AITvDFd3vZG6eCDUG3TfOL6TDgKz+5dPorKp/h3cLr21sG4zwROVPt0WINvAP7P+RrrHTJ+76oBQ2jWhvpldxG/VnZ0TcafxoCv9HM+1HHneqbH2iLp9SzHJmNSnyqOe1HumalQgc6SnRjjMA59w9oUnMilR828pKnHKKP5XRN4AQ3a3RDZBvp+rykiZdhenCuqfRomDRlYlx047FKLlYVCLAA7EdrNDzLTJVKHGsr9Qz/I4LH+B5qB48w8dLeG9ZXu0y17+1RoYO8+VLqjL3C90ZOtibvKbleQQP+vH2SXQfJmLzMnoad+T3ri9J7djejWg9CEuNmbMg27Vi/GMpr1R0PIRJq66fnA13WqaMfuhvrajTDs8hM/uuf8l4zbW4APbPFvaEXjd6fpRy0uKQ8m5v/iAkrMhuIiKkb5h6gCZNx/eRH1NAiCuAIQlZWOU1mA4w7MHyh13oBsPW6BUqrT+hEpXUFCSQZDGPcMzPyMYKmqAMx0CGZPhYjLB5Q0t1nBZzIc+3l+Qgo3xM="
  on:
    branch: master
    node: 8
    condition: $TRAVIS_OS_NAME = linux
  skip_cleanup: true
notifications:
  email:
    recipients:
    - secure: "vFku2HASiG87+c4zdfjnMgNzDm6olPOUG5fgN3NcfRP2/vZLuT2l1M3OaZ94DGaTTEJ7slFfoBRCoYJ3o0N2AEHTFo52XtTE8cN2T9rdbUZ9O7fskRFipiM6xGF6WZHFBdslBCrPGor60IRKeUh5yxa8L9+iJlCBiKVb9rGpPEAWaW0/tYh99pu1S+oMuyaiYw6/HvpXR6VmzYcnj7ky4J8XRcyENuFY5tPbCZ09CAlDmRjivTvfT9BgGMXViOgNtDXPP2+g1cbGnSsAf6Yo2Zy8/Ax38hnqW8fft7bI3/fCEbUQeNW2tc6jxjRigJ6AXssmoRAD9LmLw5cwsLx05EN2Blm+rSiZ84hR8O4pj55Nw0itAQLrFTAQ6oVPdIcEy2xtO2OHxcW0WMvVL6FhR38Ik2vOZY/wKTHyCxHF1YQXFLSfS0+QqxYC4KlcybWtSHjwjBdJto4y2jenNno+Ge1TJI1mHHRIuFig4oVzxnVl48CNoR6u8y/cNnZKovbHLefMBNi8usJQj6620CUd8uTk1Q4EfIM7xaq4Gitt0YhzRK63JqjwG/gDu5421FdyATqd3GMb9DHK1YqHgA2PJLf5ODSSFAGCBZTulWJpcnqaKijpjWCBb8PEeS7rBYBDvEHWMwaENpJxPODvztsQXyOFfiPhRp9r8BL2graGQoo="
    on_success: change
    on_failure: always
after_deploy:
- if [ $TRAVIS_BRANCH != "master" ] || [ ! $GH_TOKEN ]; then exit 0; fi
- if [ $deploy == "false" ]; then exit 0; fi
- gulp site
- mkdir ../gh-pages
- cp -rf ./gh-pages ../
- cat package.json | json version
- new_version=$(cat package.json | json version)
- git reset --hard HEAD~
- cat package.json | json version
- old_version=$(cat package.json | json version)
- git reset --hard ORIG_HEAD
- node -e 'if (!require("semver").gt(process.argv[1], process.argv[2])) process.exit(1)' $new_version $old_version || exit 0
- git fetch origin gh-pages:gh-pages
- git checkout --orphan gh-pages
- git checkout -m gh-pages
- ls -a | grep -vE "^.git$|^\.+$" | xargs rm -rf
- cp -rf ../gh-pages/* ./
- find | grep -vE "^./.git(/|$)"
- sed -i 's|\(baseurl:\s\+\)|\1//falsandtru.github.io|' _config.yml
- git config user.name "Travis-CI"
- git config user.email "Travis-CI"
- git add -A :/
- git commit -m 'chore(deploy)'\:' deploy web contents by Travis-CI'
- git push https://${GH_TOKEN}@github.com/${GIT_OWNER}/${GIT_REPO}.git gh-pages:gh-pages 2>&1 | sed -e "s/:\/\/\w\+@/:\/\/[secure]@/g"
